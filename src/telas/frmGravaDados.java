package telas;

import DAO.Conexao;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
//import javax.swing.JPanel;

/**
 *
 * @author f7057419
 */
public class frmGravaDados extends javax.swing.JFrame {

    /** Creates new form frmGravaDados */
    private frmGravaDados() {
        initComponents();
        preencheDatas();
     // alinha();
       
      //valores configurados
       
   }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButtonGrava = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        cboMes = new javax.swing.JComboBox();
        cboAno = new javax.swing.JComboBox();
        txtSefaz = new telas.formataValor();
        txtGrandesConcessionarias1 = new telas.formataValor();
        txtOrgaosEstaduais = new telas.formataValor();
        txtPmsp = new telas.formataValor();
        txtFgts = new telas.formataValor();
        txtDistribuicao = new telas.formataValor();
        txtRepasse = new telas.formataValor();
        txtProac = new telas.formataValor();
        txtRestituicaoIpva = new telas.formataValor();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Verdana", 3, 14));
        jLabel1.setForeground(new java.awt.Color(0, 102, 255));
        jLabel1.setText("SERVIÇOS EXCLUSIVOS E ESPECIALIZADOS");
        jLabel1.setBounds(30, 290, 360, 26);
        jLayeredPane1.add(jLabel1, javax.swing.JLayeredPane.POPUP_LAYER);
        jSeparator1.setBounds(160, 172, 200, 0);
        jLayeredPane1.add(jSeparator1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jSeparator2.setBounds(30, 120, 170, 10);
        jLayeredPane1.add(jSeparator2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel3.setFont(new java.awt.Font("Verdana", 3, 11));
        jLabel3.setText("Restituição IPVA:");
        jLabel3.setBounds(30, 420, 110, 15);
        jLayeredPane1.add(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel5.setFont(new java.awt.Font("Verdana", 3, 11));
        jLabel5.setText("FGTS:");
        jLabel5.setBounds(30, 260, 50, 15);
        jLayeredPane1.add(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel6.setFont(new java.awt.Font("Verdana", 3, 11));
        jLabel6.setText("Estadual - Órgãos Estaduais:");
        jLabel6.setBounds(30, 200, 190, 15);
        jLayeredPane1.add(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel2.setFont(new java.awt.Font("Verdana", 3, 14));
        jLabel2.setForeground(new java.awt.Color(0, 102, 255));
        jLabel2.setText("ANO:");
        jLabel2.setBounds(320, 90, 40, 26);
        jLayeredPane1.add(jLabel2, javax.swing.JLayeredPane.POPUP_LAYER);
        jSeparator3.setBounds(30, 320, 390, 2);
        jLayeredPane1.add(jSeparator3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel4.setFont(new java.awt.Font("Verdana", 3, 11));
        jLabel4.setText("Grandes Concessionárias:");
        jLabel4.setBounds(30, 140, 190, 15);
        jLayeredPane1.add(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel7.setFont(new java.awt.Font("Verdana", 3, 11));
        jLabel7.setText("Distribuição:");
        jLabel7.setBounds(30, 330, 190, 15);
        jLayeredPane1.add(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel8.setFont(new java.awt.Font("Verdana", 3, 11));
        jLabel8.setText("Repasse:");
        jLabel8.setBounds(30, 360, 70, 15);
        jLayeredPane1.add(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel9.setFont(new java.awt.Font("Verdana", 3, 11));
        jLabel9.setText("Proac:");
        jLabel9.setBounds(30, 390, 60, 15);
        jLayeredPane1.add(jLabel9, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonGrava.setText("Gravar");
        jButtonGrava.setToolTipText("");
        jButtonGrava.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGravaActionPerformed(evt);
            }
        });
        jButtonGrava.setBounds(40, 480, 120, 50);
        jLayeredPane1.add(jButtonGrava, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel11.setFont(new java.awt.Font("Verdana", 3, 11));
        jLabel11.setText("Estadual - SEFAZ:");
        jLabel11.setBounds(30, 170, 120, 15);
        jLayeredPane1.add(jLabel11, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel10.setFont(new java.awt.Font("Verdana", 3, 20));
        jLabel10.setForeground(new java.awt.Color(0, 102, 255));
        jLabel10.setText("Caderno de Gestão - Arrecadação");
        jLabel10.setBounds(20, 10, 420, 40);
        jLayeredPane1.add(jLabel10, javax.swing.JLayeredPane.POPUP_LAYER);

        jLabel12.setFont(new java.awt.Font("Verdana", 3, 11));
        jLabel12.setText("PMSP:");
        jLabel12.setBounds(30, 230, 40, 15);
        jLayeredPane1.add(jLabel12, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel13.setFont(new java.awt.Font("Verdana", 3, 14));
        jLabel13.setForeground(new java.awt.Color(0, 102, 255));
        jLabel13.setText("ARRECADAÇÃO:");
        jLabel13.setBounds(30, 90, 140, 26);
        jLayeredPane1.add(jLabel13, javax.swing.JLayeredPane.POPUP_LAYER);

        jLabel14.setFont(new java.awt.Font("Verdana", 3, 14));
        jLabel14.setForeground(new java.awt.Color(0, 102, 255));
        jLabel14.setText("MÊS:");
        jLabel14.setBounds(220, 90, 40, 26);
        jLayeredPane1.add(jLabel14, javax.swing.JLayeredPane.POPUP_LAYER);

        cboMes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1" }));
        cboMes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboMesItemStateChanged(evt);
            }
        });
        cboMes.setBounds(260, 90, 50, 20);
        jLayeredPane1.add(cboMes, javax.swing.JLayeredPane.DEFAULT_LAYER);

        cboAno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1" }));
        cboAno.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboAnoItemStateChanged(evt);
            }
        });
        cboAno.setBounds(360, 90, 80, 20);
        jLayeredPane1.add(cboAno, javax.swing.JLayeredPane.DEFAULT_LAYER);

        txtSefaz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSefazActionPerformed(evt);
            }
        });
        txtSefaz.setBounds(220, 170, 220, 30);
        jLayeredPane1.add(txtSefaz, javax.swing.JLayeredPane.DEFAULT_LAYER);
        txtGrandesConcessionarias1.setBounds(220, 140, 220, 30);
        jLayeredPane1.add(txtGrandesConcessionarias1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        txtOrgaosEstaduais.setBounds(220, 200, 220, 30);
        jLayeredPane1.add(txtOrgaosEstaduais, javax.swing.JLayeredPane.DEFAULT_LAYER);
        txtPmsp.setBounds(220, 230, 220, 30);
        jLayeredPane1.add(txtPmsp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        txtFgts.setBounds(220, 260, 220, 30);
        jLayeredPane1.add(txtFgts, javax.swing.JLayeredPane.DEFAULT_LAYER);
        txtDistribuicao.setBounds(220, 330, 220, 30);
        jLayeredPane1.add(txtDistribuicao, javax.swing.JLayeredPane.DEFAULT_LAYER);
        txtRepasse.setBounds(220, 360, 220, 30);
        jLayeredPane1.add(txtRepasse, javax.swing.JLayeredPane.DEFAULT_LAYER);
        txtProac.setBounds(220, 390, 220, 30);
        jLayeredPane1.add(txtProac, javax.swing.JLayeredPane.DEFAULT_LAYER);
        txtRestituicaoIpva.setBounds(220, 420, 220, 30);
        jLayeredPane1.add(txtRestituicaoIpva, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 558, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButtonGravaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGravaActionPerformed
    try {
        inseriDados();
    } catch (SQLException ex) {
    }
}//GEN-LAST:event_jButtonGravaActionPerformed

private void cboMesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboMesItemStateChanged
    try {
        buscaDados();
    } catch (SQLException ex) {
    }
    
}//GEN-LAST:event_cboMesItemStateChanged

private void cboAnoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboAnoItemStateChanged
    try {
        buscaDados();
    } catch (SQLException ex) {
    }
}//GEN-LAST:event_cboAnoItemStateChanged

private void txtSefazActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSefazActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_txtSefazActionPerformed

    private void inseriDados() throws SQLException {
        if (validarDados()) {

            String frmMes = cboMes.getSelectedItem().toString();         
            
            String frmAno = cboAno.getSelectedItem().toString();
            Double frmGrandesConcessionarias = Double.parseDouble((txtGrandesConcessionarias1.getText().toString().replace(".", "")).replace(",", "."));
            
            Double frmEstadualSEFAZ = Double.parseDouble((txtSefaz.getText().toString().replace(".", "")).replace(",", "."));
            Double frmEstadualorgaosEstaduais = Double.parseDouble((txtOrgaosEstaduais.getText().toString().replace(".", "")).replace(",", "."));
            Double frmPMSP = Double.parseDouble((txtPmsp.getText().toString().replace(".", "")).replace(",", "."));
            Double frmFGTS = Double.parseDouble((txtFgts.getText().toString().replace(".", "")).replace(",", "."));
            Double frmDistribuicao = Double.parseDouble((txtDistribuicao.getText().toString().replace(".", "")).replace(",", "."));
            Double frmRepasse = Double.parseDouble((txtRepasse.getText().toString().replace(".", "")).replace(",", "."));
            Double frmProac = Double.parseDouble((txtProac.getText().toString().replace(".", "")).replace(",", "."));
            Double frmRestituicaoIPVA = Double.parseDouble((txtRestituicaoIpva.getText().toString().replace(".", "")).replace(",", "."));
            
            
            
            
            
         Connection cn = (Connection) new Conexao().conectar();

    // String sqlGrava = "INSERT INTO grandesnumerosarrecadacao VALUES (" + frmMes + frmAno + "," + frmGrandesConcessionarias + "," + frmEstadualSEFAZ + "," + frmEstadualorgaosEstaduais + "," + frmPMSP + "," + frmFGTS + "," + frmDistribuicao + "," + frmRepasse + "," + frmProac + "," + frmRestituicaoIPVA + ");";
                                                                                                                                                                                                                                                                                               //     ",dtRef=" +"'"+frmAnoa+"-"+frmMesa+"-"+"01"+"'" + 
     String sqlGrava = "INSERT INTO grandesnumerosarrecadacao VALUES (,"+ frmMes + frmAno + "," + frmGrandesConcessionarias + "," + frmEstadualSEFAZ + "," + frmEstadualorgaosEstaduais + "," + frmPMSP + "," + frmFGTS + "," + frmDistribuicao + "," + frmRepasse + "," + frmProac + "," + frmRestituicaoIPVA + ","+"'"+frmAno+"-"+frmMes+"-"+01+"'"+");";
       //int linha = 0;

         try {

                Statement stm = cn.createStatement();

                int rs = stm.executeUpdate(sqlGrava);

                if (rs != 0) {
                    JOptionPane.showMessageDialog(rootPane,
                            "Dados gravados com sucesso!",
                            "Arrecadação",
                            JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(rootPane,
                            "Falha",
                            "Arrecadação",
                            JOptionPane.INFORMATION_MESSAGE);

      }

         } catch (SQLException ex) {

           try {
                    atualizaDados();

             } catch (SQLException ex1) {
                }
            } finally {
                cn.close();

            }
        }
  }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        /*  try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
        javax.swing.UIManager.setLookAndFeel(info.getClassName());
        break;
        }
        }
        } catch (ClassNotFoundException ex) {
        java.util.logging.Logger.getLogger(frmGravaDados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
        java.util.logging.Logger.getLogger(frmGravaDados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
        java.util.logging.Logger.getLogger(frmGravaDados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
        java.util.logging.Logger.getLogger(frmGravaDados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }*/
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new frmGravaDados().setVisible(true);
            }
        });
    }
    
   public void alinha(){
          txtGrandesConcessionarias1.setHorizontalAlignment(JTextField.RIGHT);
          txtSefaz.setHorizontalAlignment(JTextField.RIGHT);
          txtOrgaosEstaduais.setHorizontalAlignment(JTextField.RIGHT);
          txtPmsp.setHorizontalAlignment(JTextField.RIGHT);
          txtFgts.setHorizontalAlignment(JTextField.RIGHT);
          
          txtDistribuicao.setHorizontalAlignment(JTextField.RIGHT);
          txtRepasse.setHorizontalAlignment(JTextField.RIGHT);
          txtProac.setHorizontalAlignment(JTextField.RIGHT);
          txtRestituicaoIpva.setHorizontalAlignment(JTextField.RIGHT);
          
    
   }

    private void atualizaDados() throws SQLException {
        
        
             String frmMesa =  cboMes.getSelectedItem().toString();
        
             String frmAnoa = cboAno.getSelectedItem().toString();
     
            Double frmGrandesConcessionariasa = Double.parseDouble((txtGrandesConcessionarias1.getText().toString().replace(".", "")).replace(",", "."));
            Double frmEstadualSEFAZa = Double.parseDouble((txtSefaz.getText().toString().replace(".", "")).replace(",", "."));
            Double frmEstadualorgaosEstaduaisa = Double.parseDouble((txtOrgaosEstaduais.getText().toString().replace(".", "")).replace(",", "."));
            Double frmPMSPa = Double.parseDouble((txtPmsp.getText().toString().replace(".", "")).replace(",", "."));
            Double frmFGTSa = Double.parseDouble((txtFgts.getText().toString().replace(".", "")).replace(",", "."));
            Double frmDistribuicaoa = Double.parseDouble((txtDistribuicao.getText().toString().replace(".", "")).replace(",", "."));
            Double frmRepassea = Double.parseDouble((txtRepasse.getText().toString().replace(".", "")).replace(",", "."));
            Double frmProaca = Double.parseDouble((txtProac.getText().toString().replace(".", "")).replace(",", "."));
            Double frmRestituicaoIPVAa = Double.parseDouble((txtRestituicaoIpva.getText().toString().replace(".", "")).replace(",", "."));
        
        
     
        /*/ String frmGrandesConcessionariasa = txtGrandesConcessionarias1.getText().toString();
        String frmEstadualSEFAZa = txtSefaz.getText().toString();
        String frmEstadualorgaosEstaduaisa = txtOrgaosEstaduais.getText().toString();
        String frmPMSPa = txtPmsp.getText().toString();
        String frmFGTSa = txtFgts.getText().toString();
        String frmDistribuicaoa = txtDistribuicao.getText().toString();
        String frmRepassea = txtRepasse.getText().toString();
        String frmProaca = txtProac.getText().toString();
        String frmRestituicaoIPVAa = txtRestituicaoIpva.getText().toString();*/
            
        try {
            Connection cn = (Connection) new Conexao().conectar();
            String sqlAtualiza = "UPDATE grandesnumerosarrecadacao set GrandesConcessionarias = " + frmGrandesConcessionariasa + ",Sefaz=" + frmEstadualSEFAZa + ",OrgaosEstaduais=" + frmEstadualorgaosEstaduaisa + ",Pmsp=" + frmPMSPa + ",Fgts=" + frmFGTSa + ",Distribuicao=" + frmDistribuicaoa + ",Proac=" + frmProaca + ",Repasse=" + frmRepassea + ",RestituicaoIpva=" + frmRestituicaoIPVAa + ",dtRef=" +"'"+frmAnoa+"-"+frmMesa+"-"+"01"+"'" +      " where MesAno= " + frmMesa + frmAnoa + " ;";
            System.out.println(sqlAtualiza);
            int n = JOptionPane.showConfirmDialog(null,
                    "Dados já gravados para o mês e ano informamos. Deseja Atualizar?",
                    "Arrecadação",
                    JOptionPane.YES_NO_OPTION);

            if (n == 0) {

                Statement stm = cn.createStatement();

                int rs = stm.executeUpdate(sqlAtualiza);
                if (rs != 0) {
                    JOptionPane.showMessageDialog(rootPane,
                            "Dados atualizados com sucesso!",
                            "Arrecadação",
                            JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(rootPane,
                            "Falha",
                            "Arrecadação",
                            JOptionPane.INFORMATION_MESSAGE);

             }
            }
        }catch (Exception e){
            e.printStackTrace();
        }
    }

    private boolean validarDados() {


        if (!validarValor(txtGrandesConcessionarias1.getText())) {

            JOptionPane.showMessageDialog(rootPane,
                    "Favor digitar um valor válido para Grandes Concessionarias!",
                    "Logon",
                    JOptionPane.INFORMATION_MESSAGE);

            return false;
        }

        if (!validarValor(txtSefaz.getText())) {
            JOptionPane.showMessageDialog(rootPane,
                    "Favor digitar um valor válido para Sefaz!",
                    "Logon",
                    JOptionPane.INFORMATION_MESSAGE);

            return false;
        }

        if (!validarValor(txtOrgaosEstaduais.getText())) {
            JOptionPane.showMessageDialog(rootPane,
                    "Favor digitar um valor válido para Órgãos Estaduais!",
                    "Logon",
                    JOptionPane.INFORMATION_MESSAGE);

            return false;
        }

        if (!validarValor(txtPmsp.getText())) {
            JOptionPane.showMessageDialog(rootPane,
                    "Favor digitar um valor válido para PMSP!",
                    "Logon",
                    JOptionPane.INFORMATION_MESSAGE);

            return false;
        }


        if (!validarValor(txtFgts.getText())) {
            JOptionPane.showMessageDialog(rootPane,
                    "Favor digitar um valor válido para FGTS!",
                    "Logon",
                    JOptionPane.INFORMATION_MESSAGE);
       return false;
        }

        if (!validarValor(txtDistribuicao.getText())) {
            JOptionPane.showMessageDialog(rootPane,
                    "Favor digitar um valor válido para Distribuição!",
                    "Logon",
                    JOptionPane.INFORMATION_MESSAGE);
     return false;
        }

        if (!validarValor(txtRepasse.getText())) {
            JOptionPane.showMessageDialog(rootPane,
                    "Favor digitar um valor válido para Repasse!",
                    "Logon",
                    JOptionPane.INFORMATION_MESSAGE);

            return false;
        }


        if (!validarValor(txtProac.getText())) {
            JOptionPane.showMessageDialog(rootPane,
                    "Favor digitar um valor válido para Proac!",
                    "Logon",
                    JOptionPane.INFORMATION_MESSAGE);
            return false;
        }


        if (!validarValor(txtRestituicaoIpva.getText())) {
            JOptionPane.showMessageDialog(rootPane,
                    "Favor digitar um valor válido para Restituição Ipva!",
                    "Logon",
                    JOptionPane.INFORMATION_MESSAGE);
            return false;
        }
        return true;
    }

    private void preencheDatas() {
        // Combo Mês
        for (int i = 1; i < 13; i++) {
            cboMes.addItem(i);
        }
        cboMes.removeItemAt(0);///retirando primeiro item

        Calendar calm = new GregorianCalendar().getInstance();
        int m = calm.get(Calendar.MONTH);

        cboMes.setSelectedIndex(m - 1);
        //cboMes.getSelectedItem().toString();


        //Combo Ano
        Calendar cala = GregorianCalendar.getInstance();
        int a = cala.get(Calendar.YEAR);
        // System.out.println(a);

        cboAno.addItem(a); //Ano atual
        cboAno.addItem(a - 1); //Ano atual -1
        cboAno.addItem(a - 2); //Ano atual -2
        cboAno.addItem(a - 3); //Ano atual -3
        cboAno.removeItemAt(0);
        cboAno.setSelectedIndex(0);

    }

    private void buscaDados() throws SQLException {
        String frmMes = cboMes.getSelectedItem().toString();
        String frmAno = cboAno.getSelectedItem().toString();
        int i = 0;

   Connection cn = (Connection) new Conexao().conectar();

        String sqlVai = "SELECT  grandesnumerosarrecadacao.GrandesConcessionarias, grandesnumerosarrecadacao.Sefaz,grandesnumerosarrecadacao.OrgaosEstaduais, grandesnumerosarrecadacao.Pmsp,grandesnumerosarrecadacao.Fgts,grandesnumerosarrecadacao.Distribuicao,grandesnumerosarrecadacao.Proac,grandesnumerosarrecadacao.Repasse,grandesnumerosarrecadacao.RestituicaoIpva from grandesnumerosarrecadacao  where grandesnumerosarrecadacao.MesAno= " + "'" + frmMes + frmAno + "'";

        int linha = 0;
        
        DecimalFormat df = new DecimalFormat("#0.00");

        try {

            Statement stm = cn.createStatement();
            ResultSet rs = stm.executeQuery(sqlVai);
            

            //PREENCHER A TABELA
            while (rs.next()) {

                // jTable2.setValueAt(rs.getString("MesAno"), linha, 0);
                txtGrandesConcessionarias1.setText(df.format(Double.parseDouble(rs.getString("GrandesConcessionarias"))));
                txtSefaz.setText(df.format(Double.parseDouble(rs.getString("Sefaz"))));
                txtOrgaosEstaduais.setText(df.format(Double.parseDouble(rs.getString("OrgaosEstaduais"))));
                txtPmsp.setText(df.format(Double.parseDouble(rs.getString("Pmsp"))));
                txtFgts.setText(df.format(Double.parseDouble(rs.getString("Fgts"))));
                txtDistribuicao.setText(df.format(Double.parseDouble(rs.getString("Distribuicao"))));
                txtProac.setText(df.format(Double.parseDouble(rs.getString("Proac"))));
                txtRepasse.setText(df.format(Double.parseDouble(rs.getString("Repasse"))));
                txtRestituicaoIpva.setText(df.format(Double.parseDouble(rs.getString("RestituicaoIpva"))));

                i++;
  linha++;
            }

        } catch (SQLException ex) {
        } finally {
            cn.close();
        }
    if (i == 0) {
            txtGrandesConcessionarias1.setText("");
            txtSefaz.setText("");
            txtOrgaosEstaduais.setText("");

            txtPmsp.setText("");

            txtFgts.setText("");
            txtDistribuicao.setText("");
            txtProac.setText("");
            txtRepasse.setText("");
            txtRestituicaoIpva.setText("");
  }
  }

    private boolean validarValor(String campo) {
        double valor;
        campo = campo.replace(".", "").replace(",", ".");
        try {

            valor = Double.parseDouble(campo);
            return true;
        } catch (NumberFormatException ex) {
            valor = 0;
        }
        return false;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cboAno;
    private javax.swing.JComboBox cboMes;
    private javax.swing.JButton jButtonGrava;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private telas.formataValor txtDistribuicao;
    private telas.formataValor txtFgts;
    private telas.formataValor txtGrandesConcessionarias1;
    private telas.formataValor txtOrgaosEstaduais;
    private telas.formataValor txtPmsp;
    private telas.formataValor txtProac;
    private telas.formataValor txtRepasse;
    private telas.formataValor txtRestituicaoIpva;
    private telas.formataValor txtSefaz;
    // End of variables declaration//GEN-END:variables
}
